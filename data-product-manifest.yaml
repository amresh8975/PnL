version: 0.0.10
jobId: "1157"
jobName: JPY Export Sales Price
jobType: Source Aligned Data Product
domain: finance
alias: load_to_tgt
discoveryPort:
  name: JPY Export Sales Price
inputPorts:
  - alias: JPY_Price_1
    isDynamic: true
    path: /data/PnL/Output/Sales/JPY_Price/
    optional:
      persistDataFrame: false
      advanceOptions:
        delimiter: ","
      enableDataReconciliation: false
      enforceSchema: false
      connection: Finance On-Prem Connectivity
      dataSetUrn: urn:dv:dataset:a5500e8a-bea3-47a5-872f-cf9bbf00f21b
    type: inputDelimited
productState:
  isDynamic: true
  alias: load_to_tgt
  retentionVersions: ""
  logicalSchema:
    properties:
      model_code:
        type: STRING
        description: ""
        sourceColumn: ""
        sourceTable: ""
      upload_description:
        type: STRING
        description: ""
        sourceColumn: ""
        sourceTable: ""
      continent:
        type: STRING
        description: ""
        sourceColumn: ""
        sourceTable: ""
      country:
        type: STRING
        description: ""
        sourceColumn: ""
        sourceTable: ""
      region:
        type: STRING
        description: ""
        sourceColumn: ""
        sourceTable: ""
      state:
        type: STRING
        description: ""
        sourceColumn: ""
        sourceTable: ""
      city:
        type: STRING
        description: ""
        sourceColumn: ""
        sourceTable: ""
      group_non_group:
        type: STRING
        description: ""
        sourceColumn: ""
        sourceTable: ""
      trade_type:
        type: STRING
        description: ""
        sourceColumn: ""
        sourceTable: ""
      port:
        type: STRING
        description: ""
        sourceColumn: ""
        sourceTable: ""
      currency:
        type: STRING
        description: ""
        sourceColumn: ""
        sourceTable: ""
      year:
        type: STRING
        description: ""
        sourceColumn: ""
        sourceTable: ""
      cost:
        type: STRING
        description: ""
        sourceColumn: ""
        sourceTable: ""
      capacity_cost_adj:
        type: STRING
        description: ""
        sourceColumn: ""
        sourceTable: ""
      material_cost_adj:
        type: STRING
        description: ""
        sourceColumn: ""
        sourceTable: ""
      proposed_margin_rate:
        type: STRING
        description: ""
        sourceColumn: ""
        sourceTable: ""
      month:
        type: STRING
        description: ""
        sourceColumn: ""
        sourceTable: ""
      etl_inserted_date:
        type: STRING
        description: ""
      etl_modified_date:
        type: STRING
        description: ""
      etl_created_by:
        type: STRING
        description: ""
      etl_updated_by:
        type: STRING
        description: ""
  stateStoreType: loadDataIceberg
  isProfilingEnabled: false
  updateStrategy: Overwrite
  tableName: msil_dataverse_finance_catalog.export_jpy_price_monthly
  warehousePath: /data/iceberg_warehouse
  catalogName: postgres
  optional:
    persistDataFrame: false
    enableDataReconciliation: false
    enforceSchema: false
    enforceSchemaMethod: Warning
    catalogType: postgres
  refreshInterval: None
transformation:
  - isDynamic: true
    alias: Spark_SQL_1
    description: transform
    sequence: 2
    inputDataFrameList:
      - inputDataFrame: JPY_Price_1
        tempViewName: export_jpy_price
    query: WITH month_cte AS( SELECT  all_months.col1 AS
      month_name,  all_months.col2 AS month_seq
      FROM  (  SELECT   explode(ARRAY(("Apr",   1),   ("May",   2),   ("Jun",   3),   ("Jul",   4),   ("Aug",   5),   ("Sep",   6),   ("Oct",   7),   ("Nov",   8),   ("Dec",   9),   ("Jan",   10),   ("Feb",   11),   ("Mar",   12)))
      AS all_months ) months_tab ), export_jpy_price_cte AS( SELECT  model_code
      ,  upload_description ,  continent ,  country ,  region ,  state ,  city
      ,  Group_Non_Group ,  trade_type ,  port ,  currency ,  YEAR ,  cost
      ,  capacity_cost_adj ,  material_cost_adj ,  proposed_margin_rate
      ,  CASE   WHEN initcap(trim(MONTH)) IN ('Apr', 'April') THEN 'Apr'   WHEN
      initcap(trim(MONTH)) IN ('May') THEN 'May'   WHEN initcap(trim(MONTH)) IN
      ('Jun', 'June') THEN 'Jun'   WHEN initcap(trim(MONTH)) IN ('Jul', 'July')
      THEN 'Jul'   WHEN initcap(trim(MONTH)) IN ('Aug', 'August') THEN
      'Aug'   WHEN initcap(trim(MONTH)) IN ('Sep', 'September') THEN
      'Sep'   WHEN initcap(trim(MONTH)) IN ('Oct', 'October') THEN 'Oct'   WHEN
      initcap(trim(MONTH)) IN ('Nov', 'November') THEN 'Nov'   WHEN
      initcap(trim(MONTH)) IN ('Dec', 'December') THEN 'Dec'   WHEN
      initcap(trim(MONTH)) IN ('Jan', 'January') THEN 'Jan'   WHEN
      initcap(trim(MONTH)) IN ('Feb', 'February') THEN 'Feb'   WHEN
      initcap(trim(MONTH)) IN ('Mar', 'March') THEN 'Mar'  END AS MONTH
      FROM  export_jpy_price ), propagation_tab AS (
      SELECT  row_gen_months.model_code ,  row_gen_months.upload_description
      ,  row_gen_months.month_name AS MONTH
      ,  last_value(export_jpy_price.month,  TRUE) OVER (PARTITION BY
      row_gen_months.model_code,  row_gen_months.upload_description ORDER
      BY  row_gen_months.month_seq) proagation_month FROM  ((  SELECT   DISTINCT
      model_code,   upload_description  FROM   export_jpy_price_cte) AS
      export_jpy_price CROSS JOIN month_cte ) row_gen_months LEFT JOIN
      export_jpy_price_cte export_jpy_price ON  export_jpy_price.model_code =
      row_gen_months.model_code  AND export_jpy_price.upload_description =
      row_gen_months.upload_description  AND export_jpy_price.month =
      row_gen_months.month_name ) SELECT  export_jpy_price.model_code
      ,  export_jpy_price.upload_description ,  export_jpy_price.continent
      ,  export_jpy_price.country ,  export_jpy_price.region
      ,  export_jpy_price.state ,  export_jpy_price.city
      ,  export_jpy_price.Group_Non_Group ,  export_jpy_price.trade_type
      ,  export_jpy_price.port ,  export_jpy_price.currency
      ,  export_jpy_price.year ,  export_jpy_price.cost
      ,  export_jpy_price.capacity_cost_adj
      ,  export_jpy_price.material_cost_adj
      ,  export_jpy_price.proposed_margin_rate
      ,  propagation_tab.MONTH,  current_timestamp() AS
      etl_inserted_date,  current_timestamp() AS
      etl_modified_date,  'platform_admin' AS etl_created_by,  'platform_admin'
      AS etl_updated_by FROM  export_jpy_price_cte AS export_jpy_price INNER
      JOIN propagation_tab ON  export_jpy_price.model_code =
      propagation_tab.model_code  AND export_jpy_price.upload_description =
      propagation_tab.upload_description  AND export_jpy_price.month =
      propagation_tab.proagation_month
    optional:
      persistDataFrame: false
    type: operationThroughSqlQuery
controlPort:
  dataQualityRules:
    NullValueCheck:
      productState:
        checks:
          - column: model_code
        referenceAlias: load_to_tgt
outputPort:
  subscriptionChannels:
    - channelType: Postgres
      queryType: SQL
    - channelType: Dataproduct
      queryType: SQL
