version: 0.0.43
jobId: "1148"
jobName: Domestic Sales Price
jobType: Source Aligned Data Product
domain: finance
alias: load_to_target
discoveryPort:
  name: Domestic Sales Price
inputPorts:
  - alias: Domestic_Price_1
    isDynamic: true
    path: /data/use-case/PnL/Output/Sales/DomesticPrice
    optional:
      persistDataFrame: false
      advanceOptions:
        delimiter: ","
      enableDataReconciliation: false
      enforceSchema: false
      connection: Finance On-Prem Connectivity
      dataSetUrn: urn:dv:dataset:acb14eca-f7c3-4afd-9d29-909408de02a1
    type: inputDelimited
productState:
  isDynamic: true
  alias: load_to_target
  retentionVersions: ""
  logicalSchema:
    properties:
      model_code:
        type: STRING
        description: 16 digit Production Code
        sourceColumn: ""
        sourceTable: ""
      upload_description:
        type: STRING
        description: Description of 16 digit Production Code
        sourceColumn: ""
        sourceTable: ""
      continent:
        type: STRING
        description: Name of the continent in which the model is being exported
        sourceColumn: ""
        sourceTable: ""
      country:
        type: STRING
        description: Name of the country in which the model is being exported
        sourceColumn: ""
        sourceTable: ""
      region:
        type: STRING
        description: Name of the region in which the model is being sold
        sourceColumn: ""
        sourceTable: ""
      state:
        type: STRING
        description: Name of the state in which the model is being sold
        sourceColumn: ""
        sourceTable: ""
      city:
        type: STRING
        description: Name of the city in which the model is being sold
        sourceColumn: ""
        sourceTable: ""
      year:
        type: STRING
        description: Financial Year
        sourceColumn: ""
        sourceTable: ""
      net_basic:
        type: STRING
        description: Basic Price including tool kit net of Dealer Reserve Fund
        sourceColumn: ""
        sourceTable: ""
      strategic_price:
        type: STRING
        description: Strategic Price for Truing up Delhi Price to All India Price
        sourceColumn: ""
        sourceTable: ""
      change_h2_per:
        type: STRING
        description: Change in H2 in percentage
        sourceColumn: ""
        sourceTable: ""
      change_h2_abs:
        type: STRING
        description: Change in H2 in absolute terms
        sourceColumn: ""
        sourceTable: ""
      change_budget_per:
        type: STRING
        description: Change in Budget in percentage
        sourceColumn: ""
        sourceTable: ""
      change_budget_abs:
        type: STRING
        description: Change in Budget in absolute terms
        sourceColumn: ""
        sourceTable: ""
      discount:
        type: STRING
        description: Discount per unit
        sourceColumn: ""
        sourceTable: ""
      month:
        type: STRING
        description: Month
        sourceColumn: ""
        sourceTable: ""
      etl_inserted_date:
        type: STRING
        description: Date when the record was inserted by ETL
      etl_modified_date:
        type: STRING
        description: Date when the record was last modified by ETL
      etl_created_by:
        type: STRING
        description: Creator of the ETL process
        sourceColumn: ""
        sourceTable: ""
      etl_updated_by:
        type: STRING
        description: Last updater of the ETL process
        sourceColumn: ""
        sourceTable: ""
  stateStoreType: loadDataIceberg
  isProfilingEnabled: false
  updateStrategy: Overwrite
  tableName: msil_dataverse_finance_catalog.domestic_sales_price_monthly
  warehousePath: /data/iceberg_warehouse
  catalogName: postgres
  optional:
    persistDataFrame: false
    enableDataReconciliation: false
    enforceSchema: false
    enforceSchemaMethod: Warning
    catalogType: postgres
    loggingOptions:
      printSchema: true
  refreshInterval: None
transformation:
  - isDynamic: true
    alias: Spark_SQL_1
    description: transform
    sequence: 2
    inputDataFrameList:
      - inputDataFrame: Domestic_Price_1
        tempViewName: domestic_price
    query: with month_cte as(   select      all_months.col1 as
      month_name,      all_months.col2 as
      month_seq    from      (       select          explode(           array(             ("Apr",
      1),              ("May", 2),              ("Jun", 3),              ("Jul",
      4),              ("Aug", 5),              ("Sep", 6),              ("Oct",
      7),              ("Nov", 8),              ("Dec", 9),              ("Jan",
      10),              ("Feb", 11),              ("Mar",
      12)           )         ) as all_months     ) months_tab
      ),  domestic_price_cte
      as(   select      model_code,      upload_description,      continent,      country,      region,      state,      city,      year,      basic_net_of_drf_tool_kit
      as
      net_basic,      strategic_price,      change_h2_per,      change_h2_abs,      change_budget_per,      change_budget_abs,      discount,      case
      when initcap(       trim(month)     ) in ('Apr', 'April') then 'Apr' when
      initcap(       trim(month)     ) in ('May') then 'May' when
      initcap(       trim(month)     ) in ('Jun', 'June') then 'Jun' when
      initcap(       trim(month)     ) in ('Jul', 'July') then 'Jul' when
      initcap(       trim(month)     ) in ('Aug', 'August') then 'Aug' when
      initcap(       trim(month)     ) in ('Sep', 'September') then 'Sep' when
      initcap(       trim(month)     ) in ('Oct', 'October') then 'Oct' when
      initcap(       trim(month)     ) in ('Nov', 'November') then 'Nov' when
      initcap(       trim(month)     ) in ('Dec', 'December') then 'Dec' when
      initcap(       trim(month)     ) in ('Jan', 'January') then 'Jan' when
      initcap(       trim(month)     ) in ('Feb', 'February') then 'Feb' when
      initcap(       trim(month)     ) in ('Mar', 'March') then 'Mar' end as
      month    from      domestic_price ),  propagation_tab as
      (   select      row_gen_months.model_code,      row_gen_months.upload_description,      row_gen_months.month_name
      as month,      last_value(domestic_price.month, true) over
      (       partition by
      row_gen_months.model_code,        row_gen_months.upload_description        order
      by          row_gen_months.month_seq     )
      proagation_month    from      (       (         select            distinct
      model_code,            upload_description          from            domestic_price_cte       )
      as domestic_price cross        join month_cte     )
      row_gen_months      left join domestic_price_cte domestic_price on
      domestic_price.model_code = row_gen_months.model_code      and
      domestic_price.upload_description =
      row_gen_months.upload_description      and domestic_price.month =
      row_gen_months.month_name
      )  select    domestic_price.model_code,    domestic_price.upload_description,    domestic_price.continent,    domestic_price.country,    domestic_price.region,    domestic_price.state,    domestic_price.city,    case
      when propagation_tab.proagation_month in (     'Apr', 'May', 'Jun', 'Jul',
      'Aug', 'Sep',      'Oct', 'Nov', 'Dec'   )    and propagation_tab.month in
      ('Jan', 'Feb', 'Mar') then domestic_price.year + 1 else
      domestic_price.year end as year,    cast(domestic_price.net_basic as
      decimal(38, 5)) net_basic,    cast(domestic_price.strategic_price as
      decimal(38, 5)) strategic_price,    cast(domestic_price.change_h2_per as
      decimal(38, 5)) change_h2_per,    cast(domestic_price.change_h2_abs as
      decimal(38, 5)) change_h2_abs,    cast(domestic_price.change_budget_per as
      decimal(38, 5))
      change_budget_per,    cast(domestic_price.change_budget_abs as decimal(38,
      5)) change_budget_abs,    cast(domestic_price.discount as decimal(38, 5))
      discount,    propagation_tab.MONTH,    current_timestamp() as
      etl_inserted_date,    current_timestamp() as
      etl_modified_date,    'platform_admin' as
      etl_created_by,    'platform_admin' as
      etl_updated_by  from    domestic_price_cte as domestic_price    inner join
      propagation_tab on domestic_price.model_code =
      propagation_tab.model_code    and domestic_price.upload_description =
      propagation_tab.upload_description    and domestic_price.month =
      propagation_tab.proagation_month
    optional:
      persistDataFrame: false
    type: operationThroughSqlQuery
controlPort:
  dataQualityRules:
    NullValueCheck:
      productState:
        checks:
          - column: model_code
        referenceAlias: load_to_target
outputPort:
  subscriptionChannels:
    - channelType: Postgres
      queryType: SQL
    - channelType: Dataproduct
      queryType: SQL
