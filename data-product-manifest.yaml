version: 0.0.31
jobId: "1148"
jobName: PnL Domestic Price
jobType: Source Aligned Data Product
domain: finance
alias: load_to_target
discoveryPort:
  name: PnL Domestic Price
inputPorts:
  - alias: Domestic_Price_1
    isDynamic: true
    path: /data/PnL/Output/Sales/DomesticPrice/
    optional:
      persistDataFrame: false
      advanceOptions:
        delimiter: ","
      enableDataReconciliation: false
      enforceSchema: false
      connection: Finance On-Prem Connectivity
      dataSetUrn: urn:dv:dataset:acb14eca-f7c3-4afd-9d29-909408de02a1
    type: inputDelimited
productState:
  isDynamic: true
  alias: load_to_target
  retentionVersions: ""
  logicalSchema: ""
  stateStoreType: loadDataIceberg
  isProfilingEnabled: false
  updateStrategy: Overwrite
  tableName: msil_dataverse_finance_catalog.dometic_price_monthly
  warehousePath: /data/iceberg_warehouse
  catalogName: postgres
  optional:
    persistDataFrame: false
    enableDataReconciliation: false
    enforceSchema: false
    enforceSchemaMethod: Warning
    catalogType: postgres
    loggingOptions:
      printSchema: true
  refreshInterval: None
transformation:
  - isDynamic: true
    alias: Spark_SQL_1
    description: transform
    sequence: 2
    inputDataFrameList:
      - inputDataFrame: Domestic_Price_1
        tempViewName: domestic_price
    query: with month_cte as(  select all_months.col1 as month_name, all_months.col2
      as month_seq  from (   select explode(array(("Apr", 1), ("May", 2),
      ("Jun", 3), ("Jul", 4), ("Aug", 5), ("Sep", 6), ("Oct", 7), ("Nov", 8),
      ("Dec", 9), ("Jan", 10), ("Feb", 11), ("Mar", 12))) as all_months   )
      months_tab  ), domestic_price_cte as(  select    model_code   ,
      upload_description   , continent   , country   , region   , state   ,
      city   , year   , basic_net_of_drf_tool_kit as net_basic   ,
      strategic_price   , change_h2_per   , change_h2_abs   ,
      change_budget_per   , change_budget_abs   , discount   , case when
      initcap(trim(month)) in ('Apr', 'April') then 'Apr'     when
      initcap(trim(month)) in ('May') then 'May'    when initcap(trim(month)) in
      ('Jun', 'June') then 'Jun'     when initcap(trim(month)) in ('Jul',
      'July') then 'Jul'     when initcap(trim(month)) in ('Aug', 'August') then
      'Aug'     when initcap(trim(month)) in ('Sep', 'September') then
      'Sep'     when initcap(trim(month)) in ('Oct', 'October') then
      'Oct'     when initcap(trim(month)) in ('Nov', 'November') then
      'Nov'     when initcap(trim(month)) in ('Dec', 'December') then
      'Dec'     when initcap(trim(month)) in ('Jan', 'January') then
      'Jan'     when initcap(trim(month)) in ('Feb', 'February') then
      'Feb'     when initcap(trim(month)) in ('Mar', 'March') then 'Mar'     end
      as month  FROM   domestic_price  ), propagation_tab as ( select
      row_gen_months.model_code  , row_gen_months.upload_description  ,
      row_gen_months.month_name as month  , last_value(domestic_price.month,
      True) over (partition by row_gen_months.model_code,
      row_gen_months.upload_description order by row_gen_months.month_seq)
      proagation_month from   ((select distinct model_code, upload_description
      from domestic_price_cte) as domestic_price  cross join   month_cte  )
      row_gen_months  left join  domestic_price_cte
      domestic_price  on  domestic_price.model_code =
      row_gen_months.model_code   AND domestic_price.upload_description =
      row_gen_months.upload_description   AND domestic_price.month =
      row_gen_months.month_name  ) select   domestic_price.model_code  ,
      domestic_price.upload_description  , domestic_price.continent  ,
      domestic_price.country  , domestic_price.region  , domestic_price.state  ,
      domestic_price.city  , domestic_price.year  , domestic_price.net_basic  ,
      domestic_price.strategic_price  , domestic_price.change_h2_per  ,
      domestic_price.change_h2_abs  , domestic_price.change_budget_per  ,
      domestic_price.change_budget_abs  , domestic_price.discount  ,
      propagation_tab.month from  domestic_price_cte as domestic_price inner
      join  propagation_tab ON domestic_price.model_code =
      propagation_tab.model_code    AND domestic_price.upload_description =
      propagation_tab.upload_description    AND domestic_price.month =
      propagation_tab.proagation_month
    optional:
      persistDataFrame: false
    type: operationThroughSqlQuery
controlPort:
  dataQualityRules: {}
outputPort:
  subscriptionChannels:
    - channelType: Postgres
      queryType: SQL
    - channelType: Dataproduct
      queryType: SQL
