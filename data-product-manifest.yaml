version: 0.0.20
jobId: "1156"
jobName: OEM Sales Price
jobType: Source Aligned Data Product
domain: finance
alias: loading_data_into_OEM_Sales_Table
discoveryPort:
  name: OEM Sales Price
inputPorts:
  - alias: OEM_Price_1
    isDynamic: true
    path: /data/use-case/PnL/Output/Sales/OEM_Price
    optional:
      persistDataFrame: false
      advanceOptions:
        delimiter: ","
      enableDataReconciliation: false
      enforceSchema: false
      connection: Finance On-Prem Connectivity
      dataSetUrn: urn:dv:dataset:596559be-ecd6-4b01-97bf-ee4e4fc0d70e
    type: inputDelimited
productState:
  isDynamic: true
  alias: loading_data_into_OEM_Sales_Table
  retentionVersions: ""
  logicalSchema:
    properties:
      model_code:
        type: STRING
        description: 16 digit Production Code
        sourceColumn: ""
        sourceTable: ""
      upload_description:
        type: STRING
        description: Description of 16 digit Production Code
        sourceColumn: ""
        sourceTable: ""
      continent:
        type: STRING
        description: Name of the continent in which the model is being exported
        sourceColumn: ""
        sourceTable: ""
      country:
        type: STRING
        description: Name of the country in which the model is being exported
        sourceColumn: ""
        sourceTable: ""
      region:
        type: STRING
        description: Name of the region in which the model is being sold
        sourceColumn: ""
        sourceTable: ""
      state:
        type: STRING
        description: Name of the state in which the model is being sold
        sourceColumn: ""
        sourceTable: ""
      city:
        type: STRING
        description: Name of the city in which the model is being sold
        sourceColumn: ""
        sourceTable: ""
      year:
        type: STRING
        description: Financial Year
        sourceColumn: ""
        sourceTable: ""
      net_basic:
        type: STRING
        description: Basic Sales Price including Tool Kit
        sourceColumn: ""
        sourceTable: ""
      development_cost:
        type: STRING
        description: Development Cost
        sourceColumn: ""
        sourceTable: ""
      month:
        type: STRING
        description: Month
        sourceColumn: ""
        sourceTable: ""
      etl_inserted_date:
        type: STRING
        description: Date when the record was inserted by ETL
      etl_modified_date:
        type: STRING
        description: Date when the record was last modified by ETL
      etl_created_by:
        type: STRING
        description: Creator of the ETL process
        sourceColumn: ""
        sourceTable: ""
      etl_updated_by:
        type: STRING
        description: Last updater of the ETL process
        sourceColumn: ""
        sourceTable: ""
  stateStoreType: loadDataIceberg
  isProfilingEnabled: false
  updateStrategy: Overwrite
  tableName: msil_dataverse_finance_catalog.oem_sales_price
  warehousePath: /data/iceberg_warehouse
  catalogName: postgres
  optional:
    persistDataFrame: false
    enableDataReconciliation: false
    enforceSchema: false
    enforceSchemaMethod: Warning
    catalogType: postgres
  refreshInterval: None
transformation:
  - isDynamic: true
    alias: Spark_SQL_1
    description: transform the OEM Sales Data
    sequence: 2
    inputDataFrameList:
      - inputDataFrame: OEM_Price_1
        tempViewName: oem_price
    query: with month_cte as(   select      all_months.col1 as
      month_name,      all_months.col2 as
      month_seq    from      (       select          explode(           array(             ("Apr",
      1),              ("May", 2),              ("Jun", 3),              ("Jul",
      4),              ("Aug", 5),              ("Sep", 6),              ("Oct",
      7),              ("Nov", 8),              ("Dec", 9),              ("Jan",
      10),              ("Feb", 11),              ("Mar",
      12)           )         ) as all_months     ) months_tab ),  oem_price_cte
      as(   select      Model_Code,      Upload_Description,      Continent,      Country,      Region,      State,      City,      year,      Basic_Sales_Price_inc_Tool_Kit
      as net_basic,      Development_Cost,      case when
      initcap(       trim(month)     ) in ('Apr', 'April') then 'Apr' when
      initcap(       trim(month)     ) in ('May') then 'May' when
      initcap(       trim(month)     ) in ('Jun', 'June') then 'Jun' when
      initcap(       trim(month)     ) in ('Jul', 'July') then 'Jul' when
      initcap(       trim(month)     ) in ('Aug', 'August') then 'Aug' when
      initcap(       trim(month)     ) in ('Sep', 'September') then 'Sep' when
      initcap(       trim(month)     ) in ('Oct', 'October') then 'Oct' when
      initcap(       trim(month)     ) in ('Nov', 'November') then 'Nov' when
      initcap(       trim(month)     ) in ('Dec', 'December') then 'Dec' when
      initcap(       trim(month)     ) in ('Jan', 'January') then 'Jan' when
      initcap(       trim(month)     ) in ('Feb', 'February') then 'Feb' when
      initcap(       trim(month)     ) in ('Mar', 'March') then 'Mar' end as
      month    from      oem_price ),  propagation_tab as
      (   select      row_gen_months.model_code,      row_gen_months.upload_description,      row_gen_months.month_name
      as month,      last_value(oem_price.month, true) over (       partition by
      row_gen_months.model_code,        row_gen_months.upload_description        order
      by          row_gen_months.month_seq     )
      proagation_month    from      (       (         select            distinct
      model_code,            upload_description          from            oem_price_cte       )
      as oem_price cross        join month_cte     ) row_gen_months      left
      join oem_price_cte oem_price on oem_price.model_code =
      row_gen_months.model_code      and oem_price.upload_description =
      row_gen_months.upload_description      and oem_price.month =
      row_gen_months.month_name
      )  select    oem_price.Model_Code,    oem_price.Upload_Description,    oem_price.Continent,    oem_price.Country,    oem_price.Region,    oem_price.State,    oem_price.City,    case
      when propagation_tab.proagation_month in (     'Apr', 'May', 'Jun', 'Jul',
      'Aug', 'Sep',      'Oct', 'Nov', 'Dec'   )    and propagation_tab.month in
      ('Jan', 'Feb', 'Mar') then oem_price.year + 1 else oem_price.year end as
      year,    cast(oem_price.net_basic as  decimal(38, 5))
      net_basic,    cast(oem_price.Development_Cost as  decimal(38, 5))
      Development_Cost,    propagation_tab.MONTH ,    current_timestamp() as
      etl_inserted_date,    current_timestamp() as
      etl_modified_date,    'platform_admin' as
      etl_created_by,    'platform_admin' as
      etl_updated_by  from    oem_price_cte as oem_price    inner join
      propagation_tab on oem_price.model_code =
      propagation_tab.model_code    and oem_price.upload_description =
      propagation_tab.upload_description    and oem_price.month =
      propagation_tab.proagation_month
    optional:
      persistDataFrame: false
      loggingOptions:
        printSchema: true
    type: operationThroughSqlQuery
controlPort:
  dataQualityRules:
    NullValueCheck:
      productState:
        checks:
          - column: model_code
        referenceAlias: loading_data_into_OEM_Sales_Table
outputPort:
  subscriptionChannels:
    - channelType: Postgres
      queryType: SQL
    - channelType: Dataproduct
      queryType: SQL
